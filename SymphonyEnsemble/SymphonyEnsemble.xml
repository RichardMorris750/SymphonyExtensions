<?xml version='1.0'?>
<!--Generated by xmldoc v9.5.3b on 25 SEP 2012 14:38:58-->
<doc>
  <assembly>
    <name>Base</name>
  </assembly>
  <members>
    <member name="M:Symphony.Ensemble.Data.CalendarBindingData.#ctor(@System.DateTime)">
       <summary>
        Default constuctor
       </summary>
       <param name=inDate>Accepts the default date to display in the calendar conrol</param>
    </member>
    <member name="P:Symphony.Ensemble.Data.CalendarBindingData.ActualDate">
       <summary>
        Bindable property exposing the actual date value
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.Data.CalendarBindingData.SynergyDate">
       <summary>
       expose the synergy date field as a string so tat we can see it through the .NET API
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.Data.GraphBindingData.BarValue">
       <summary>
        Expose the individual bar value
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.Data.GraphBindingData.BarLabel">
       <summary>
        Expose te individual bar label
       </summary>
    </member>
    <member name="M:Symphony.Ensemble.Data.ListFieldData.#ctor">
       <summary>
        Default constructor
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.Data.ListFieldData.FieldName">
       <summary>
        The name of the field
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.Data.ListFieldData.ColumnHeading">
       <summary>
        Specified column heading value
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.Data.ListFieldData.ColumnType">
       <summary>
        The Synergy type of the column
       </summary>		
    </member>
    <member name="P:Symphony.Ensemble.Data.ListFieldData.DataType">
       <summary>
        Column Synergy data type
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.Data.ListFieldData.DataStart">
       <summary>
        the posistion the data field starts in the Synergy record
       </summary>		
    </member>
    <member name="P:Symphony.Ensemble.Data.ListFieldData.DataSize">
       <summary>
        The data size of the Synergy field in the record area
       </summary>		
    </member>
    <member name="M:Symphony.Ensemble.Data.ProgressBindingData.#ctor">
       <summary>
        Default constructor
       </summary>
    </member>
    <member name="T:Symphony.Ensemble.Delegates.MenuSignalEventArgs">
       <summary>
        Simple data class that defines the contract between the hostUI Toolkit program and the UI Control
       </summary>
    </member>
    <member name="M:Symphony.Ensemble.Delegates.MenuSignalEventArgs.#ctor(System.String)">
       <summary>
        Constructor
       </summary>
      <param name=menu>Accepts the menu string to send to the host UI Toolkit program</param>
    </member>
    <member name="P:Symphony.Ensemble.Delegates.MenuSignalEventArgs.MenuName">
       <summary>
        Contains the name of the signalled menu entry
       </summary>
    </member>
    <member name="T:Symphony.Ensemble.Delegates.ListLoadEventArgs">
       <summary>
        Data class that defines the contract between the View Model and the host UI Toolkit program when the View Model
        is requesting data from a UI Toolkit list load method.
       </summary>
    </member>
    <member name="M:Symphony.Ensemble.Delegates.ListLoadEventArgs.#ctor(System.String)">
       <summary>
        Default constructor
       </summary>
       <param name=listData>Pass the Synergy record area to define the actual data specification which will be passed to the UI Toolkit lit load method</param>
    </member>
    <member name="P:Symphony.Ensemble.Delegates.ListLoadEventArgs.DataArea">
       <summary>
        list load data area
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.Delegates.ListLoadEventArgs.MoreItems">
       <summary>
        value indicating current item being loaded.
       </summary>
    </member>
    <member name="M:Symphony.Ensemble.ViewModel.BaseViewModel.RaiseMenuSignal(System.String)">
       <summary>
        Allow View Models that extend this class to raise an eventback to the UI Toolkit host program
      
       </summary>
    </member>
    <member name="M:Symphony.Ensemble.ViewModel.CalendarViewModel.#ctor">
       <summary>
        Default constructor.  Creates an instance of the view model
       </summary>
    </member>
    <member name="M:Symphony.Ensemble.ViewModel.CalendarViewModel.#ctor(@System.DateTime)">
       <summary>
        Alternate constructor
       </summary>
       <param name=inData>Accept the default date</param>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.CalendarViewModel.CalendarData">
       <summary>
        Expose the calendar binding data element
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.CalendarViewModel.CommandBinding">
       <summary>
        Bindable command to allow for the signalling of a menu entry to the host UI Toolkit program
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.GraphViewModel.GraphData">
       <summary>
        Expose the collectin of graph items
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.GraphViewModel.GraphTitle">
       <summary>
        Graph title
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.GraphViewModel.GraphSummary">
       <summary>
        Graph summary text
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.GraphViewModel.CommandBinding">
       <summary>
        Bindable command to allow for the signalling of a menu entry to the host UI Toolkit program
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.ListViewModel.ButtonCommand">
       <summary>
        Bindable point to expose generic command option
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.ListViewModel.ColumnData">
       <summary>
        Expose the colukmn data
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.ListViewModel.FindColumnListCollection">
       <summary>
        Collecton of columns that allow searching
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.ListViewModel.SelectedFindColumn">
       <summary>
        Search column item index
       </summary>		
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.ListViewModel.SearchText">
       <summary>
        Search text
       </summary>		
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.ListViewModel.ListDataTable">
       <summary>
        List table data
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.ListViewModel.ListItemSelected">
       <summary>
        selected item index
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.ListViewModel.ListDataView">
       <summary>
        list view data view
       </summary>
    </member>
    <member name="M:Symphony.Ensemble.ViewModel.ListViewModel.AddColumnItem(Symphony.Ensemble.Data.ListFieldData)">
       <summary>
        Add a column to the data table/row layout
       </summary>
    </member>
    <member name="M:Symphony.Ensemble.ViewModel.ListViewModel.CreateTable">
        <summary>
        Creates the data table based on the fields types defined n the column array
        </summary>
    </member>
    <member name="M:Symphony.Ensemble.ViewModel.ListViewModel.SetColumnHeader(System.Int32,System.String)">
       <summary>
        define a column header
       </summary>		
    </member>
    <member name="M:Symphony.Ensemble.ViewModel.ListViewModel.LoadTable">
       <summary>
        Force the laoding of the table
       </summary>
    </member>
    <member name="M:Symphony.Ensemble.ViewModel.ListViewModel.ClearTable">
       <summary>
        Clear the table contents but keep the structure of the table intact
       </summary>	
    </member>
    <member name="T:Symphony.Ensemble.ViewModel.ProgressViewModel">
       <summary>
        View model class to allow binding of data and commands between progress bar view and UI Toolkit host
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.ProgressViewModel.ProgressData">
       <summary>
        Binding data point between View and UI Toolkit host.
       </summary>
    </member>
    <member name="M:Symphony.Ensemble.ViewModel.ProgressViewModel.Increment">
       <summary>
        Force the current value to increment
       </summary>
    </member>
    <member name="M:Symphony.Ensemble.ViewModel.ProgressViewModel.MaxItOut">
       <summary>
      	force the progress value to be maxed out
       </summary>
    </member>
    <member name="M:Symphony.Ensemble.ViewModel.WebViewerViewModel.#ctor">
       <summary>
        Default constructor
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.WebViewerViewModel.WebBrowserData">
       <summary>
        Access to the web browser binding data element
       </summary>
    </member>
    <member name="P:Symphony.Ensemble.ViewModel.WebViewerViewModel.CancelCommand">
       <summary>
        Bindable command property to allow the signalling of menu names to the host UI Toolkit program
       </summary>
    </member>
    <member name="T:Symphony.Ensemble.Controls.Calendar">
       <summary>
       Interaction logic for Calendar.xaml
       </summary>
    </member>
    <member name="T:Symphony.Ensemble.Controls.Components.ListFind">
       <summary>
       Interaction logic for ListFind.xaml
       </summary>
    </member>
    <member name="T:Symphony.Ensemble.Controls.Components.ListGrid">
       <summary>
       Interaction logic for ListGrid.xaml
       </summary>
    </member>
    <member name="T:Symphony.Ensemble.Controls.ListControl">
       <summary>
       Interaction logic for ListControl.xaml
       </summary>
    </member>
    <member name="T:Symphony.Ensemble.Controls.Progress">
       <summary>
       Interaction logic for Progress.xaml
       </summary>
    </member>
    <member name="T:Symphony.Ensemble.Controls.WebViewer">
       <summary>
       Interaction logic for WebViewer.xaml
       </summary>
    </member>
  </members>
</doc>
