;; **********************************************************************
;; 
;; Title:       WebViewerViewModel.dbc
;; 
;; Type:        Class
;; 
;; Description: Web viewer view model class
;; 
;; Author:      Richard C. Morris, Synergex Professional Services Group
;;
;; Copyright (c) 2012, Synergex International, Inc. All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import System
import System.Collections.Generic
import System.Text

import Symphony.Ensemble.ViewModel
import Symphony.Conductor.Commands
import Symphony.Ensemble.Data

namespace Symphony.Ensemble.ViewModel

	public class WebViewerViewModel extends BaseViewModel
		
.region "Constructor"

		;;; <summary>
		;;;  Default constructor
		;;; </summary>
		public method WebViewerViewModel
			endparams
		proc
			mWebBrowserData = new WebViewerBindingData()

		endmethod

.endregion

.region "Properties"

		private mWebBrowserData	,@WebViewerBindingData

		;;; <summary>
		;;;  Access to the web browser binding data element
		;;; </summary>
		public property WebBrowserData, @WebViewerBindingData
			method get
			proc
				mreturn mWebBrowserData
			endmethod
			method set
			proc
				mWebBrowserData = value
			endmethod
		endproperty
		
.endregion

.region "Commands"

		private mCancelCommand	,@GenericCommand

		;;; <summary>
		;;;  Bindable command property to allow the signalling of menu names to the host UI Toolkit program
		;;; </summary>
		public property CancelCommand, @GenericCommand
			method get
			proc
				if (mCancelCommand == ^null)
				begin
					mCancelCommand = new GenericCommand("CANCEL")
					addhandler(mCancelCommand.CommandExecuted, commandExecuted_event)
				end
				mreturn mCancelCommand
			endmethod
		endproperty
		
		private method commandExecuted_event	,void
			sender								,@Object
			param								,String
			endparams
		proc
			RaiseMenuSignal(param)
		endmethod
		
.endregion


	endclass

endnamespace

